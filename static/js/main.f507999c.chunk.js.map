{"version":3,"sources":["components/Menu/Menu.js","components/Index/Index.js","components/LoaderCenter/LoaderCenter.js","hooks/useRequest.js","components/MapView/utils.js","components/MapView/MapView.js","components/NowPage/NowPageMenu.js","components/NowPage/NowPage.js","components/About/About.js","components/API/Api.js","App.js","reportWebVitals.js","index.js"],"names":["Menu","className","to","type","id","activeClassName","Index","style","backgroundImage","LoaderCenter","width","height","role","useRequest","method","url","urlParams","useState","error","setError","undefined","data","setData","loading","setLoading","requestUrl","useMemo","Object","keys","map","key","join","useEffect","rq","XMLHttpRequest","onloadstart","onloadend","onerror","event","ontimeout","onload","JSON","parse","response","SyntaxError","open","send","getFeatureColor","prop","LatvianGeographicalCenter","MapView","geojsonUrl","MapContainer","center","zoom","TileLayer","attribution","GeoJSON","feature","weight","color","properties","DANGER","fillOpacity","getMethodDescription","NowPageMenu","layer","setLayer","setMethod","selectedTime","indexFrom","indexTo","index","setIndex","period","setPeriod","download","htmlFor","value","onChange","min","max","step","textAlign","getNowDate","Math","floor","Date","now","fromDelta","NowPage","from","setFrom","setTo","urls","layersets","length","_layer","parseInt","filter","val","console","log","geojson_url","shp_url","getGeoJsonUrl","setPeriodFrom","setPeriodTo","ev","target","date","setHours","getHours","toLocaleString","getSelectedTime","href","getMap","About","title","jsonObject","Api","src","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f507999c.chunk.js","sourcesContent":["import React from \"react\"\nimport { NavLink } from \"react-router-dom\"\n\nconst Menu = () => {\n    return (\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <div className=\"container-fluid\">\n                <NavLink to=\"/\" className=\"navbar-brand\">\n                    Meža ugunsbīstamības karte\n                </NavLink>\n                <button\n                    className=\"navbar-toggler\"\n                    type=\"button\"\n                    data-bs-toggle=\"collapse\"\n                    data-bs-target=\"#navbarSupportedContent\"\n                    aria-controls=\"navbarSupportedContent\"\n                    aria-expanded=\"false\"\n                    aria-label=\"Toggle navigation\"\n                >\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div\n                    className=\"collapse navbar-collapse\"\n                    id=\"navbarSupportedContent\"\n                >\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                        <li className=\"nav-item\">\n                            <NavLink\n                                to=\"/map/now\"\n                                activeClassName=\"active\"\n                                className=\"nav-link\"\n                            >\n                                Ugunsbīstamība šobrīd\n                            </NavLink>\n                        </li>\n                        <li className=\"nav-item\">\n                            <NavLink\n                                to=\"/use-api\"\n                                activeClassName=\"active\"\n                                className=\"nav-link\"\n                            >\n                                API\n                            </NavLink>\n                        </li>\n                        <li className=\"nav-item\">\n                            <NavLink\n                                to=\"/about\"\n                                activeClassName=\"active\"\n                                className=\"nav-link\"\n                            >\n                                Par tīmekļa vietni\n                            </NavLink>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </nav>\n    )\n}\n\nexport default Menu\n","import React from \"react\"\n\nconst Index = () => {\n    return (\n        <div className=\"photo-container\" style={{\n            backgroundImage: `url(\"forest.jpg\")`,\n        }}>\n            <div className=\"container-fluid\">\n                <p className=\"text-on-photo\">\n                    Latvija nav pārāk bagāta ar dabas resursiem valsts… bet ir jālepojas ar tiem, kuri ir.\n                    Latvijā viens no visizplatītākajiem dabas krājumiem ir mežs.\n                    Tomēr gan Latvijā, gan parējās valstīs mežu vienmēr apdraud ugunsgrēki. \n                    Šajā tīmekļa vietnē ir iespējams apskatīt kāda, uz doto brīdi, ir ugunsbīstamība Latvijas mežos.\n                    Ugunsbīstamība ir aprēķināta, izmantojot dažādas metodes: <i>JAC</i>, <i>AHP</i>, <i>MLC</i>.\n                    Arī iespējams apskatīt <i>ugunsgrēka izcelšanas</i> un <i>ugunsgrēka izplatības</i> bīstamības \n                    atsevišķi vai apskatīt <i>kopējo ugunsbīstamību</i>. \n                    Izmantojot mūsu tīmekļa vietnes <i>API</i> ir iespējams iegūt slāņus <i>GeoJSON</i> un <i>SHP</i> formātos automātiski.\n                </p>\n            </div>\n        </div>\n    )\n}\n\nexport default Index","import React from \"react\"\n\nconst LoaderCenter = () => {\n    return (\n        <div className=\"text-center\">\n            <div\n                className=\"spinner-grow\"\n                style={{\n                    width: \"3rem\",\n                    height: \"3rem\"\n                }}\n                role=\"status\"\n            >\n                <span className=\"visually-hidden\">Loading...</span>\n            </div>\n        </div>\n    )\n}\n\nexport default LoaderCenter\n","import { useState, useEffect, useMemo } from \"react\"\n\nconst useRequest = ({ method, url, urlParams }) => {\n    const [error, setError] = useState(false)\n    const [data, setData] = useState(undefined)\n    const [loading, setLoading] = useState(false)\n\n    const requestUrl = useMemo(() => {\n        if (url) {\n            if (urlParams) {\n                return (\n                    url +\n                    \"?\" +\n                    Object.keys(urlParams)\n                        .map((key) => key + \"=\" + urlParams[key])\n                        .join(\"&\"))\n            } else {\n                return url\n            }\n        }\n        else {\n            return null\n        }\n    }, [urlParams, url])\n    \n\n    useEffect(() => {\n        if (requestUrl) {\n            let rq = new XMLHttpRequest()\n            rq.onloadstart = () => {\n                setLoading(true)\n            }\n            rq.onloadend = () => {\n                setLoading(false)\n            }\n            rq.onerror = (event) => {\n                setError(true)\n            }\n            rq.ontimeout = (event) => {\n                setError(true)\n            }\n            rq.onload = (event) => {\n                try {\n                    setData(JSON.parse(rq.response))\n                }\n                catch (SyntaxError) {\n                    setData(rq.response)\n                }\n            }\n            rq.open(method, requestUrl, true)\n            rq.send()\n        }\n    }, [method, requestUrl])\n\n    return [ data, loading, error ]\n}\n\nexport default useRequest","const getFeatureColor = (prop) => {\n    switch (prop) {\n        case \"LOW\":\n            return \"#008000\"\n        case \"MID\":\n            return \"#FFFF00\"\n        case \"HIGH\": \n            return \"#FF0000\"\n        default:\n            return \"#FFFFFF\"\n    }\n}\n\nexport {getFeatureColor}","import React from \"react\"\nimport { MapContainer, TileLayer, GeoJSON } from \"react-leaflet\"\nimport { LoaderCenter } from \"..\"\nimport { useRequest } from \"../../hooks\"\nimport { getFeatureColor } from \"./utils\"\nimport 'leaflet/dist/leaflet.css';\n\nconst LatvianGeographicalCenter = [56.8805539308396, 24.60646047116392]\n\nconst MapView = ({ geojsonUrl }) => {\n    const [data, loading, error] = useRequest({\n        method: \"GET\",\n        url: geojsonUrl,\n    })\n\n    if (loading) return <LoaderCenter />\n\n    if (error) return <div>Notikusi kļūda...</div>\n\n    return (\n        <MapContainer center={LatvianGeographicalCenter} zoom={7} style={{width: \"100%\", height: \"500px\"}}>\n            <TileLayer\n                attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            />\n            <GeoJSON data={data} style={(feature) => {\n                return {\n                    weight: 0.5,\n                    color: getFeatureColor(feature.properties.DANGER),\n                    fillOpacity: 0.5\n                }\n            }} />\n        </MapContainer>\n    )\n}\n\nexport default MapView\n","import React from \"react\"\n\nconst getMethodDescription = (method) => {\n    switch (method) {\n        case \"jac\":\n            return `Žakāra indeksa (JAC) metode ir jauna metode, kas potenciāli var tikt \n            izmantota meža ugunsgrēku ietekmējošo faktoru svara vērtību noteikšanai un pārbaudei. Žakāra \n            indekss, ko dēvē arī par Žakāra līdzības koeficientu, ir statistisks rādītājs, ko izmanto, lai \n            izprastu līdzības starp izlašu kopām.`\n        case \"ahp\":\n            return `Analītiskās hierarhijas procesa  (AHP)  metode  ir  viena  no  visbiežāk  izmantotajām \n            metodēm  pasaulē  meža  ugunsbīstamības  ietekmējošo  faktoru  svara  vērtību  noteikšanā  kā \n            lēmumu  pieņemšanas  atbalsta  sistēma.  AHP  metodes  noteiktās  svara  vērtības  balstītas  uz \n            ekspertu subjektīvu faktoru svara vērtību novērtējumu, kas transformēts kvantitatīvos lielumos, \n            attēlojot  objektīvo  realitāti.`\n        case \"mlc\":\n            return `\n            Maximum likelihood classification (MLC) algoritma metode ir viena no populārākajām \n            klasifikācijas metodēm Zemes tālizpētē. Metodes līdzšinējais pielietojums mežsaimniecībā ir \n            bijis ugunsgrēku identificēšana satelītattēlos.\n            `\n        default:\n            return \"\"\n    }\n}\n\n\nconst NowPageMenu = ({\n    layer,\n    setLayer,\n    method,\n    setMethod,\n    selectedTime,\n    indexFrom,\n    indexTo,\n    index,\n    setIndex,\n    period,\n    setPeriod,\n    download\n}) => {\n    return (\n        <ul className=\"list-group\">\n            <li className=\"list-group-item\">\n                <label htmlFor=\"layer\">Slānis</label>\n                <select\n                    id=\"layer\"\n                    className=\"form-select\"\n                    value={layer}\n                    onChange={setLayer}\n                >\n                    <option value=\"total\">Kopēja bīstamība</option>\n                    <option value=\"ignition\">\n                        Ugunsgrēka izcēlšanās bīstamība\n                    </option>\n                    <option value=\"spread\">\n                        Ugunsgrēka izplatības bīstamība\n                    </option>\n                </select>\n            </li>\n            <li className=\"list-group-item\">\n                <label htmlFor=\"method\">Metode</label>\n                <select\n                    id=\"method\"\n                    className=\"form-select\"\n                    value={method}\n                    onChange={setMethod}\n                >\n                    <option value=\"jac\">JAC</option>\n                    <option value=\"ahp\">AHP</option>\n                    <option value=\"mlc\">MLC</option>\n                </select>\n            </li>\n            <li className=\"list-group-item\">\n                <label htmlFor=\"index\" className=\"form-label\">\n                    Datums un laiks: {selectedTime}\n                </label>\n                <input\n                    type=\"range\"\n                    className=\"form-range\"\n                    id=\"index\"\n                    min={indexFrom}\n                    max={indexTo}\n                    step={1}\n                    value={index}\n                    onChange={setIndex}\n                />\n            </li>\n            <li className=\"list-group-item\">\n                <label htmlFor=\"period\" className=\"form-label\">\n                    Periods\n                </label>\n                <select\n                    id=\"period\"\n                    className=\"form-select\"\n                    value={period}\n                    onChange={setPeriod}\n                >\n                    <option value=\"1h\">pēdējā 1h</option>\n                    <option value=\"4h\">pēdējās 4h</option>\n                    <option value=\"12h\">pēdējās 12h</option>\n                    <option value=\"24h\">pēdējās 24h</option>\n                    <option value=\"2d\">pēdējās 2d</option>\n                    <option value=\"7d\">pēdējās 7d</option>\n                </select>\n            </li>\n            <li className=\"list-group-item\">\n                <div>\n                    <span style={{ color: \"rgba(256, 0, 0, 0.5)\" }}>&#9632;</span> - \n                    Augsts risks\n                </div>\n                <div>\n                    <span style={{ color: \"rgba(256, 256, 0, 0.5)\" }}>&#9632;</span> - \n                    Vidējs risks\n                </div>\n                <div>\n                    <span style={{ color: \"rgba(0, 128, 0, 0.5)\" }}>&#9632;</span> - \n                    Zems risks\n                </div>\n            </li>\n            <li className=\"list-group-item\" style={{textAlign: \"justify\"}}>\n                {getMethodDescription(method)}\n            </li>\n            {   \n                download\n                ?\n                    (<li className=\"list-group-item\">\n                        {download}\n                    </li>)\n                :\n                    null\n            }\n        </ul>\n    )\n}\n\nexport default NowPageMenu\n","import React, { useState } from \"react\"\nimport { LoaderCenter, MapView } from \"..\"\nimport { useRequest } from \"../../hooks\"\nimport NowPageMenu from \"./NowPageMenu\"\n\nconst getNowDate = () => {\n    return Math.floor(Date.now() / 1000)\n}\n\nconst host = \"\"\n\nconst fromDelta = {\n    \"1h\": 3600,\n    \"4h\": 4 * 3600,\n    \"12h\": 12 * 3600,\n    \"24h\": 24 * 3600,\n    \"2d\": 2 * 86400,\n    \"7d\": 7 * 86400,\n}\n\nconst NowPage = () => {\n    const [from, setFrom] = useState(getNowDate() - 3600)\n    const [to, setTo] = useState(getNowDate())\n    const [index, setIndex] = useState(0)\n    const [layer, setLayer] = useState(\"ignition\")\n    const [method, setMethod] = useState(\"jac\")\n    const [period, setPeriod] = useState(\"1h\")\n\n    const [data, loading, error] = useRequest({\n        method: \"GET\",\n        url: host + \"/api/get/period\",\n        urlParams: {\n            from,\n            to,\n        },\n    })\n\n    const handlePeriodChange = (ev) => {\n        const val = ev.target.value\n        const now = Math.floor(Date.now() / 1000)\n        setFrom(now - fromDelta[val])\n        setTo(now)\n        setPeriod(val)\n    }\n\n    const getGeoJsonUrl = () => {\n        if (layer && data && method) {\n            if (data.layersets.length === 0) {\n                return \"no-layers\"\n            }\n\n            const layers = data.layersets[parseInt(index)][\"layers\"][layer]            \n\n            const _layer = layers.filter((val) => {\n                console.log(val)\n                return val.method === method\n            })\n\n            if (_layer.length > 0) {\n                return [host + _layer[0].geojson_url, host + _layer[0].shp_url]\n            } else {\n                return \"not-found\"\n            }\n        } else {\n            return null\n        }\n    }\n\n    const getSelectedTime = () => {\n        if (data.layersets.length > 0) {\n            let date = new Date(data.layersets[parseInt(index)].date)\n            date.setHours(date.getHours() + 3)\n            return date.toLocaleString(\"lv\")\n        }\n        else {\n            return \"nav slāņu\"\n        }\n       \n    }\n\n    const urls = getGeoJsonUrl()\n    const getMap = () => {\n        switch (urls) {\n            case \"no-layers\":\n                return <div>Nav atrasti slāņi šīm laika periodam</div>\n            case \"not-found\":\n                return (\n                    <div>Slanis ar izvēlētajiem parametriem nav atrasts!</div>\n                )\n            default:\n                return <MapView geojsonUrl={urls[0]} />\n        }\n    }\n    const getDownloadButton = () => {\n        if (urls !== \"no-layers\" && urls !== \"not-found\") {\n            return (\n                <a href={urls[1]} download className=\"btn btn-primary\">\n                    Lejuplādēt .shp slāni\n                </a>\n            )\n        }\n\n        return null\n    }\n\n    if (loading) return <LoaderCenter />\n\n    if (error) return <div>Notikusi kļūda...</div>\n\n    if (data)\n        return (\n            <div className=\"row\">\n                <div className=\"col-md-4\">\n                    <NowPageMenu\n                        setPeriodFrom={setFrom}\n                        setPeriodTo={setTo}\n                        indexFrom={0}\n                        indexTo={data.layersets.length - 1}\n                        index={index}\n                        setIndex={(ev) => setIndex(ev.target.value)}\n                        layer={layer}\n                        setLayer={(ev) => setLayer(ev.target.value)}\n                        method={method}\n                        setMethod={(ev) => setMethod(ev.target.value)}\n                        selectedTime={getSelectedTime()}\n                        period={period}\n                        setPeriod={handlePeriodChange}\n                        download={getDownloadButton()}\n                    />\n                </div>\n                <div className=\"col-md-8\">{getMap()}</div>\n            </div>\n        )\n\n    return <div></div>\n}\n\nexport default NowPage\n","import React from \"react\"\n\nconst About = () => {\n    return (\n        <div className=\"row\">\n            <div className=\"col-md-12\">\n                <p>\n                    Tīmekļa vietne izstrādāta&nbsp;\n                    <a href=\"https://www.lata.org.lv/skolas-2021\">\n                        Ģeotēlpisko datu hakatons skolēniem 2021\n                    </a>\n                    &nbsp; ietvaros. Tīmekļa vietni izstrādāja{\" \"}\n                    <i>tea.spill(keyboard)</i> komanda.\n                </p>\n            </div>\n            <div className=\"col-md-12\">\n                <h4>Atsauces</h4>\n                <div>\n                    Tīmēkļa vietnē radīto slāņu apreķini ir izveidoti,\n                    balstoties uz&nbsp;\n                    <a href=\"https://www.gisnet.lv/~marisn/305-76951-Krumins_Gintars_gk17027.pdf\">\n                        Gintara Krūmiņa bakalaura darbu (LU, darba vadītājs\n                        Māriss Nartišs)\n                    </a>\n                    .\n                </div>\n                <div>\n                    Tīmēkļa vietnes ikonu izveidoja&nbsp;\n                    <a href=\"https://www.freepik.com\" title=\"Freepik\">\n                        Freepik\n                    </a>\n                    &nbsp; no&nbsp;\n                    <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">\n                        www.flaticon.com\n                    </a>\n                    .\n                </div>\n                <div>\n                    No <i>Latvijas Valsts Ceļu</i> datu kopam izmantoti:\n                    <ul>\n                        <li>\n                            <a href=\"https://data.gov.lv/dati/lv/dataset/aktualie-celu-meteorologisko-staciju-dati\">\n                                dati meteoroloģiskām stacijam reālajā laikā;\n                            </a>\n                        </li>\n                        <li>\n                            <a href=\"https://data.gov.lv/dati/lv/dataset/celu-meteo-staciju-vesturiskie-dati-2001-2019-gadi\">\n                                meteorologisko stāciju vēsturiskie dati;\n                            </a>\n                        </li>\n                        <li>\n                            <a href=\"https://data.gov.lv/dati/lv/dataset/valsts-celu-tikls\">\n                                Latvijas autoceļu tīkls.\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div>\n                    No <i>Latvijas Valsts Mežu</i> datu kopam izmantoti:\n                    <ul>\n                        <li>\n                            <a href=\"https://data.gov.lv/dati/lv/dataset/as-latvijas-valsts-mezi-pamatdati\">\n                                meža iecirkņi;\n                            </a>\n                        </li>\n                        <li>\n                            <a href=\"https://data.gov.lv/dati/lv/dataset/as-latvijas-valsts-mezi-mezkopiba-un-ugunsapsardziba\">\n                                ugunsgrēku vietas, ūdens ņemšanas vietas, stigas, mineralizētas joslas.\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div>\n                    No <i>Latvijas Ģeotelpiskās informācijas aģentūras</i> datu kopam izmantoti:\n                    <ul>\n                        <li>\n                            <a href=\"https://www.lgia.gov.lv/lv/Digit%C4%81lais%20reljefa%20modelis\">\n                                digitālais reljefa modelis;\n                            </a>\n                        </li>\n                        <li>\n                            <a href=\"https://www.lgia.gov.lv/lv/node/879\">\n                                augstas izšķirtspējas slāņi.\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div>\n                    No <i>OpenStreetMap</i> datu kopam izmantoti:\n                    <ul>\n                        <li>\n                            dzelceļu tīkls Latvijā.\n                        </li>\n                    </ul>\n                </div>\n                <div>\n                    No <i>Latvijas Vides, ģeoloģijas un meteoroloģijas centra</i> datu kopam izmantoti:\n                    <ul>\n                        <li>\n                            <a href=\"https://videscentrs.lvgmc.lv/iebuvets/zemes-dzilu-informacijas-sistema\">\n                                Zemes dzīļu informācijas sistēma.\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default About\n","import React from \"react\"\nimport ReactJson from 'react-json-view'\n\nconst jsonObject = JSON.parse(`\n{\"to\": \"2021-10-27T09:19:51\", \"from\": \"2021-10-26T09:19:51\", \"layersets\": [{\"date\": \"2021-10-26T18:06:36.773377\", \"layers\": {\"ignition\": [{\"method\": \"jac\", \"geojson_url\": \"/api/storage/json/55488599d6fce9611153.json\", \"shp_url\": \"/api/storage/shp/55488599d6fce9611153.zip\"}, {\"method\": \"ahp\", \"geojson_url\": \"/api/storage/json/b858297190fbadf523fa.json\", \"shp_url\": \"/api/storage/shp/b858297190fbadf523fa.zip\"}, {\"method\": \"mlc\", \"geojson_url\": \"/api/storage/json/2f250a3c4acd23540da0.json\", \"shp_url\": \"/api/storage/shp/2f250a3c4acd23540da0.zip\"}], \"spread\": [{\"method\": \"jac\", \"geojson_url\": \"/api/storage/json/9ede6e0a2ff2405c1cf2.json\", \"shp_url\": \"/api/storage/shp/9ede6e0a2ff2405c1cf2.zip\"}, {\"method\": \"ahp\", \"geojson_url\": \"/api/storage/json/3c95ccf9881d91c3f320.json\", \"shp_url\": \"/api/storage/shp/3c95ccf9881d91c3f320.zip\"}, {\"method\": \"mlc\", \"geojson_url\": \"/api/storage/json/ddeb388a1dc9b562304a.json\", \"shp_url\": \"/api/storage/shp/ddeb388a1dc9b562304a.zip\"}], \"total\": [{\"method\": \"jac\", \"geojson_url\": \"/api/storage/json/5be91ed205f2ea6ae387.json\", \"shp_url\": \"/api/storage/shp/5be91ed205f2ea6ae387.zip\"}, {\"method\": \"ahp\", \"geojson_url\": \"/api/storage/json/f3f84b9b2c821e2a011d.json\", \"shp_url\": \"/api/storage/shp/f3f84b9b2c821e2a011d.zip\"}, {\"method\": \"mlc\", \"geojson_url\": \"/api/storage/json/b4e16a00106cbf5f03d5.json\", \"shp_url\": \"/api/storage/shp/b4e16a00106cbf5f03d5.zip\"}]}}], \"code\": 200, \"message\": \"OK\"}\n`)\n\nconst Api = () => {\n    return (\n        <div className=\"row\">\n            <div className=\"col-12\">\n                <h4>/api/get/period</h4>\n                <p>\n                    Atgriež slāņu sarakstu par noteikto periodu.\n                </p>\n                <p>\n                    <ul>\n                        <li>\n                            <i>Pieprasījuma metode: <b>GET</b></i>\n                        </li>\n                        <li>\n                            <i>URL parametri</i>:\n                            <ul>\n                                <li>\n                                    <b>from</b> (vesels skaitlis) - minimālais slāņa izveidošanas datums <i>UNIX timestamp</i> formatā;\n                                </li>\n                                <li>\n                                    <b>to</b> (vesels skaitlis) - maksimālais slāņa izveidošanas datums <i>UNIX timestamp</i> formatā.\n                                </li>\n                            </ul>\n                        </li>\n                        <li>\n                            <i>Response status codes:</i>\n                            <ul>\n                                <li>200 - OK</li>\n                                <li>400 - Bad request</li>\n                            </ul>\n                        </li>\n                        <li>\n                            <i>Response MIME type: </i>\n                            <b>application/json</b>\n                        </li>\n                        <li>\n                            <i>Pieprasījuma URL piemērs: </i>\n                            <b><a href=\"https://www.tea-spill-keyboard.id.lv/api/get/period?from=1635322507&to=1635326107\">/api/get/period?from=1635322507&to=1635326107</a></b>\n                        </li>\n                    </ul>\n                </p>\n                <p>\n                    <h5>Atbildes piemērs:</h5>\n                    <ReactJson src={jsonObject} />\n                </p>\n            </div>\n        </div>\n    )\n}\n\nexport default Api","import React from \"react\"\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\nimport { About, Api, Index, Menu, NowPage } from \"./components\"\n\nconst App = () => {\n    return (\n        <Router>\n            <div className=\"container mb-3\">\n                <Menu />\n            </div>\n            <div className=\"container\">\n                <Switch>\n                    <Route exact path=\"/map/now\">\n                        <NowPage />\n                    </Route>\n                    <Route exact path=\"/about\">\n                        <About />\n                    </Route>\n                    <Route exact path=\"/use-api\">\n                        <Api />\n                    </Route>\n                    <Route exact path=\"/\">\n                        <Index />\n                    </Route>\n                </Switch>\n            </div>\n        </Router>\n    )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}